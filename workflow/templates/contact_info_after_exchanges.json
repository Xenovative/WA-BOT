[
    {
        "id": "contact-info-flow",
        "type": "tab",
        "label": "Contact Info After 3 Exchanges",
        "disabled": false,
        "info": "This flow sends contact information after 3 message exchanges with a user"
    },
    {
        "id": "message-counter",
        "type": "function",
        "z": "contact-info-flow",
        "name": "Count Messages",
        "func": "// Initialize or increment message counter for this chat\nconst chatId = msg.payload.chatId;\n\n// Get or initialize context for this chat\nconst counts = context.get('messageCounts') || {};\ncounts[chatId] = (counts[chatId] || 0) + 1;\ncontext.set('messageCounts', counts);\n\n// Add count to the message\nmsg.messageCount = counts[chatId];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 120,
        "wires": [
            [
                "message-counter-check"
            ]
        ]
    },
    {
        "id": "message-counter-check",
        "type": "switch",
        "z": "contact-info-flow",
        "name": "Is 3rd Message?",
        "property": "messageCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 120,
        "wires": [
            [
                "prepare-contact-message"
            ]
        ]
    },
    {
        "id": "prepare-contact-message",
        "type": "template",
        "z": "contact-info-flow",
        "name": "Contact Info Message",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"chatId\": \"{{payload.chatId}}\",\n    \"message\": \"Thank you for your interest! Here's our contact information:\\n\\nEmail: contact@example.com\\nPhone: +1-234-567-8900\\nWebsite: www.example.com\\n\\nFeel free to reach out if you have any questions!\",\n    \"messageType\": \"text\"\n}",
        "output": "json",
        "x": 740,
        "y": 120,
        "wires": [
            [
                "send-contact-info"
            ]
        ]
    },
    {
        "id": "send-contact-info",
        "type": "http request",
        "z": "contact-info-flow",
        "name": "Send WhatsApp Message",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost:3000/api/workflow/send-message",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 950,
        "y": 120,
        "wires": [
            [
                "log-result"
            ]
        ]
    },
    {
        "id": "log-result",
        "type": "debug",
        "z": "contact-info-flow",
        "name": "Log Result",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 120,
        "wires": []
    },
    {
        "id": "whatsapp-message-in",
        "type": "mqtt in",
        "z": "contact-info-flow",
        "name": "WhatsApp Messages",
        "topic": "whatsapp/messages",
        "qos": "2",
        "datatype": "json",
        "broker": "broker",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 120,
        "wires": [
            [
                "message-counter"
            ]
        ]
    },
    {
        "id": "broker",
        "type": "mqtt-broker",
        "name": "Local Broker",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    }
]
